---
- hosts: localhost
  connection: local

  vars_prompt:
  - name: host_hash
    prompt: Enter password for user 'host'
    private: yes
    encrypt: sha512_crypt
    confirm: yes

  tasks:

  - name: Store host's password hash in vars file
    copy:
      content: "host_hash: {{ host_hash }}"
      dest: /home/host/vars_host_hash.yml
      owner: host
      mode: 0600

  - name: Create the non-root user account
    user:
      name: host
      password: "{{ host_hash }}"
      shell: /bin/bash
      groups: sudo
      append: yes
      generate_ssh_key: yes
      ssh_key_comment: host@master

  - name: Read authorized keys of root
    command: cat /root/.ssh/authorized_keys
    register: root_keys

  - name: Add same SSH keys as root has
    authorized_key:
      user: host
      state: present
      key: "{{ item }}"
    loop: "{{ root_keys.stdout_lines }}"

  - name: Upgrading all packages
    apt:
      update_cache: yes
      upgrade: yes
 
  - name: Add the HashiCorp GPG key
    apt_key:
      url: https://apt.releases.hashicorp.com/gpg

  - name: Add the official HashiCorp Terraform Linux repository
    apt_repository:
      repo: deb [arch=amd64] https://apt.releases.hashicorp.com {{ ansible_facts.distribution_release }} main

  - name: Install Terraform
    apt:
      name: terraform

  - name: Copy token to user host
    copy:
      remote_src: yes
      src: /root/do_token
      dest: /home/host/do_token
      owner: host
      mode: 0600

  - name: Install BIND
    apt:
      name:
      - bind9
      - bind9utils
      - bind9-doc
      - dnsutils

  - name: Set BIND options
    ansible.builtin.blockinfile:
      path: /etc/bind/named.conf.options
      insertafter: "directory"
      block: |
        allow-query-cache { none; };
        recursion no;
        allow-update { 127.0.0.1; };
    notify: restart BIND

  - name: Create directory for zone files
    file:
      path: /etc/bind/zones
      state: directory
      owner: root
      group: bind
      mode: u=rwx,g=rx,o=rx

  - name: Change resolved.conf
    ansible.builtin.lineinfile:
      path: /etc/systemd/resolved.conf
      regexp: '^#DNS='
      line: DNS=127.0.0.1

  - name: Update AppArmor
    ansible.builtin.blockinfile:
      path: /etc/apparmor.d/usr.sbin.named
      insertafter: "/etc/bind/[*]"
      block: |
        /etc/bind/zones/** rw,
    notify: restart AppArmor

  handlers:

  - name: restart AppArmor
    ansible.builtin.service:
      name: apparmor
      state: restarted

  - name: restart BIND
    ansible.builtin.service:
      name: named
      state: restarted
